/**
* OpenDota API
* # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
*
* OpenAPI spec version: 17.6.1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models


/**
 * 
 * @param account_id Player's account identifier
 * @param steamid Player's steam identifier
 * @param avatar Steam picture URL (small picture)
 * @param avatarmedium Steam picture URL (medium picture)
 * @param avatarfull Steam picture URL (full picture)
 * @param profileurl Steam profile URL
 * @param personaname Player's Steam name
 * @param cheese Amount of dollars the player has donated to OpenDota
 * @param fh_unavailable Whether the refresh of player' match history failed
 * @param loccountrycode Player's country identifier, e.g. US
 * @param name Verified player name, e.g. 'Miracle-'
 * @param country_code Player's country code
 * @param fantasy_role Player's ingame role (core: 1 or support: 2)
 * @param team_id Player's team identifier
 * @param team_name Player's team name, e.g. 'Evil Geniuses'
 * @param team_tag Player's team shorthand tag, e.g. 'EG'
 * @param is_locked Whether the roster lock is active
 * @param is_pro Whether the player is professional or not
 * @param locked_until When the roster lock will end
 */
data class Inline_response_200_13 (
    /* Player's account identifier */
    val account_id: kotlin.Int? = null,
    /* Player's steam identifier */
    val steamid: kotlin.String? = null,
    /* Steam picture URL (small picture) */
    val avatar: kotlin.String? = null,
    /* Steam picture URL (medium picture) */
    val avatarmedium: kotlin.String? = null,
    /* Steam picture URL (full picture) */
    val avatarfull: kotlin.String? = null,
    /* Steam profile URL */
    val profileurl: kotlin.String? = null,
    /* Player's Steam name */
    val personaname: kotlin.String? = null,
    /* Amount of dollars the player has donated to OpenDota */
    val cheese: kotlin.Int? = null,
    /* Whether the refresh of player' match history failed */
    val fh_unavailable: kotlin.Boolean? = null,
    /* Player's country identifier, e.g. US */
    val loccountrycode: kotlin.String? = null,
    /* Verified player name, e.g. 'Miracle-' */
    val name: kotlin.String? = null,
    /* Player's country code */
    val country_code: kotlin.String? = null,
    /* Player's ingame role (core: 1 or support: 2) */
    val fantasy_role: kotlin.Int? = null,
    /* Player's team identifier */
    val team_id: kotlin.Int? = null,
    /* Player's team name, e.g. 'Evil Geniuses' */
    val team_name: kotlin.String? = null,
    /* Player's team shorthand tag, e.g. 'EG' */
    val team_tag: kotlin.String? = null,
    /* Whether the roster lock is active */
    val is_locked: kotlin.Boolean? = null,
    /* Whether the player is professional or not */
    val is_pro: kotlin.Boolean? = null,
    /* When the roster lock will end */
    val locked_until: kotlin.Int? = null
) {

}

