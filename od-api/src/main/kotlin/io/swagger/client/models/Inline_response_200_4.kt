/**
* OpenDota API
* # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 
*
* OpenAPI spec version: 17.6.1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.Playersaccount_idmatches_heroes

/**
 * Object containing information on the match
 * @param match_id Match ID
 * @param player_slot Which slot the player is in. 0-127 are Radiant, 128-255 are Dire
 * @param radiant_win Boolean indicating whether Radiant won the match
 * @param duration Duration of the game in seconds
 * @param game_mode Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json
 * @param lobby_type Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json
 * @param hero_id The ID value of the hero played
 * @param start_time Time the game started in seconds since 1970
 * @param version version
 * @param kills Total kills the player had at the end of the game
 * @param deaths Total deaths the player had at the end of the game
 * @param assists Total assists the player had at the end of the game
 * @param skill Skill bracket assigned by Valve (Normal, High, Very High)
 * @param party_size Size of the player's party
 * @param heroes 
 */
data class Inline_response_200_4 (
    /* Match ID */
    val match_id: kotlin.Int? = null,
    /* Which slot the player is in. 0-127 are Radiant, 128-255 are Dire */
    val player_slot: kotlin.Int? = null,
    /* Boolean indicating whether Radiant won the match */
    val radiant_win: kotlin.Boolean? = null,
    /* Duration of the game in seconds */
    val duration: kotlin.Int? = null,
    /* Integer corresponding to game mode played. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/game_mode.json */
    val game_mode: kotlin.Int? = null,
    /* Integer corresponding to lobby type of match. List of constants can be found here: https://github.com/odota/dotaconstants/blob/master/json/lobby_type.json */
    val lobby_type: kotlin.Int? = null,
    /* The ID value of the hero played */
    val hero_id: kotlin.Int? = null,
    /* Time the game started in seconds since 1970 */
    val start_time: kotlin.Int? = null,
    /* version */
    val version: kotlin.Int? = null,
    /* Total kills the player had at the end of the game */
    val kills: kotlin.Int? = null,
    /* Total deaths the player had at the end of the game */
    val deaths: kotlin.Int? = null,
    /* Total assists the player had at the end of the game */
    val assists: kotlin.Int? = null,
    /* Skill bracket assigned by Valve (Normal, High, Very High) */
    val skill: kotlin.Int? = null,
    /* Size of the player's party */
    val party_size: kotlin.Int? = null,
    val heroes: Playersaccount_idmatches_heroes? = null
) {

}

